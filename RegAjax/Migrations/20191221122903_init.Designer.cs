// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegAjax.Data;

namespace RegAjax.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191221122903_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("RegAjax.Data.Entities.Answer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("RegistrationId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("VariantId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationId");

                    b.HasIndex("VariantId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("RegAjax.Data.Entities.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Какой цвет вам больше нравится?"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Какой напиток вы предпочитаете"
                        });
                });

            modelBuilder.Entity("RegAjax.Data.Entities.Registration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("RegAjax.Data.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "admin",
                            PasswordHash = "8C6976E5B5410415BDE908BD4DEE15DFB167A9C873FC4BB8A81F6F2AB448A918"
                        });
                });

            modelBuilder.Entity("RegAjax.Data.Entities.Variant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Variants");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Синий",
                            QuestionId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Желтый",
                            QuestionId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Красный",
                            QuestionId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Чай",
                            QuestionId = 2L
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Кофе",
                            QuestionId = 2L
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Сок",
                            QuestionId = 2L
                        },
                        new
                        {
                            Id = 7L,
                            Name = "Вода",
                            QuestionId = 2L
                        });
                });

            modelBuilder.Entity("RegAjax.Data.Entities.Answer", b =>
                {
                    b.HasOne("RegAjax.Data.Entities.Registration", "Registration")
                        .WithMany("Answers")
                        .HasForeignKey("RegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RegAjax.Data.Entities.Variant", "Variant")
                        .WithMany()
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RegAjax.Data.Entities.Variant", b =>
                {
                    b.HasOne("RegAjax.Data.Entities.Question", "Question")
                        .WithMany("Variants")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
